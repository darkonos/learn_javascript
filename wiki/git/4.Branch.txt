        

4.BRANCHEMENT
..........................................................................................
LA BONNE PRATIQUE C'EST DE TJRS TRAVAILLER DANS UNE BRANCHE AUTRE QUE MASTER.

- Création de la branche principale (Master)
$ git add FichierMaster.txt 
$ git add . (Ajoute tous les fichiers dans le répertoire courant)
$ git commit
On vous demandera d'indiquer le message du commit puis de valider.
- Création d'une branche 
$ git branch ma_branch
 - voir mes branch
$ git branch 
- Se positionner sur une branch précise
$ git checkout ma_branch 

- Créer une branche et se positionner directement dessus (astuces)
$ git checkout -b ma_branch

5.CORRIGER LES ERREURS SUR UN DEPOT LOCAL
.......................................

- Supprimer une branch
$ git branch -d ma_branch (supprime le label et non les commits)
- Forcer la suppression d'une branch
$ git branch -D ma_branch

6.CORRIGER LES ERREURS SUR UN DEPOT DISTANT
..........................................
- Annuler notre dernier commit sur une branche public
git revert HEAD^
- Annuler notre dernier commit sur une branche privée
git reset HEAD^


- Branche master modifié et commit non effectué
...............................................

1. git status (pour voir les fichiers modifiés mains non commités)
2. git stash (pour créer une remise)
3. git status ( pour s'assurer que la branche master est de nouveau propre)
4. Créer une nouvelle branche, basculer dessus et et appliquer la remise pour récupérer les modifications
5. git stash apply

-Afficher pour appliquer une autre remise
$ git stash list (Affiche la liste des remises avec leurs identifiants)
$ git stash apply stash@{N°_de_remise}

-Branche master modifié et commit effectué
...............................................

1. git log (pour lister par ordre inversé tous les commits réalisés avec leurs hash)
2. git reset --hard HEAD^  (Va supprimer de la branche master votre dernier commit)
3. git branch New_Branch (Créer une nouvelle branche et basculer dessus)
4. git reset hard N°deHash (Seuls les 8 premiers caractères sont nécessaires)

-Changer le message du dernier commit réalisé
$ git commit --amend -m "Nouveau message de commit"
on vérifie les changements avec git log

-Commit réalisé mais j'ai oublié d'ajouter un fichier
$ git add FichierOublie.txt
$ git commit --amend --no-edit
.........................................................................